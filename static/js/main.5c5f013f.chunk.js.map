{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","qtyBookmarks","Math","ceil","pages","i","push","className","cn","href","onClick","map","page","length","items","from","to","numbers","n","getNumbers","App","useState","setCurrentPage","itemsPerPage","setItemsPerPage","totalPages","firstVisibleItem","lastVisibleItem","visibleArray","slice","id","onChange","event","target","value","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"2NAUaA,EAA8B,SAAC,GAS1C,IAJK,IAJLC,EAII,EAJJA,MAII,IAHJC,eAGI,MAHM,EAGN,MAFJC,mBAEI,MAFU,EAEV,EADJC,EACI,EADJA,aAEMC,EAAeC,KAAKC,KAAKN,EAAQC,GACjCM,EAAkB,GAEfC,EAAI,EAAGA,GAAKJ,EAAcI,GAAK,EACtCD,EAAME,KAAKD,GAGb,OACE,qBAAIE,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAC7B,YAA6B,IAAhBT,IADf,SAIE,mBACE,UAAQ,WACRQ,UAAU,YACVE,KAAK,QACL,gBAAc,OACdC,QAAS,kBAAQX,EAAc,GAC1BC,EAAaD,EAAc,IANlC,oBAWDK,EAAMO,KAAI,SAACC,GACV,OACE,oBAEEL,UAAWC,IAAG,YAAa,CACzB,UAAWI,IAASb,IAHxB,SAME,mBACE,UAAQ,WACRQ,UAAU,YACVE,KAAI,WAAMG,GACVF,QAAS,kBAAMV,EAAaY,IAJ9B,SAMGA,KAXEA,MAgBX,oBAAIL,UAAWC,IAAG,YAAa,CAC7B,YAAaT,IAAgBK,EAAMS,SADrC,SAIE,mBACE,UAAQ,WACRN,UAAU,YACVE,KAAK,QACL,gBAAc,QACdC,QAAS,kBAAOX,EAAcK,EAAMS,QAC/Bb,EAAaD,EAAc,IANlC,wBCzDFe,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQX,KAAKY,GAGf,OAAOD,EDDeE,CAAW,EAAG,IACnCR,KAAI,SAAAO,GAAC,qBAAYA,MAEPE,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOtB,EAAP,KAAoBuB,EAApB,KACA,EAAwCD,mBAAS,GAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KAEMC,EAAaX,EAAMD,OACnBa,EAAoB3B,EAAcwB,EAAgBA,EAClDI,EAAmBD,EAAmBH,EAAe,GAAME,EAC7DC,EAAmBH,EACnBT,EAAMD,OAEJe,EAAe,YAAId,GAAOe,MAAMH,EAAkBC,GAExD,OACE,sBAAKpB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiC2B,EAAmB,EADpD,cAC2DC,EAD3D,eACiFF,EADjF,OAIA,sBAAKlB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRuB,GAAG,kBACHvB,UAAU,eACVwB,SAAU,SAACC,GACTR,GAAkBQ,EAAMC,OAAOC,OAC/BZ,EAAe,IANnB,UASE,wBAAQY,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkB5B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAO4B,EACP3B,QAASyB,EACTxB,YAAaA,EACbC,aAAc,SAACY,GACTA,IAASb,GACXuB,EAAeV,MAKrB,6BACGgB,EAAajB,KAAI,SAACyB,GAAD,OAChB,oBAEE,UAAQ,OAFV,SAIGA,IAHKA,EAAKP,MAAM,aE/D7BQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5c5f013f.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\ninterface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (changedPage: number) => void;\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage = 3,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const qtyBookmarks = Math.ceil(total / perPage);\n  const pages: number[] = [];\n\n  for (let i = 1; i <= qtyBookmarks; i += 1) {\n    pages.push(i);\n  }\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', {\n        ' disabled': currentPage === 1,\n      })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled=\"true\"\n          onClick={() => ((currentPage > 1)\n            && onPageChange(currentPage - 1))}\n        >\n          «\n        </a>\n      </li>\n      {pages.map((page) => {\n        return (\n          <li\n            key={page}\n            className={cn('page-item', {\n              ' active': page === currentPage,\n            })}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => onPageChange(page)}\n            >\n              {page}\n            </a>\n          </li>\n        );\n      })}\n      <li className={cn('page-item', {\n        ' disabled': currentPage === pages.length,\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled=\"false\"\n          onClick={() => (currentPage < pages.length)\n            && onPageChange(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items: string[] = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(3);\n\n  const totalPages = items.length;\n  const firstVisibleItem = (currentPage * itemsPerPage) - itemsPerPage;\n  const lastVisibleItem = (firstVisibleItem + itemsPerPage - 1) <= totalPages\n    ? firstVisibleItem + itemsPerPage\n    : items.length;\n\n  const visibleArray = [...items].slice(firstVisibleItem, lastVisibleItem);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstVisibleItem + 1} - ${lastVisibleItem} of ${totalPages})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={(event) => {\n              setItemsPerPage(+(event.target.value));\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalPages}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={(page) => {\n          if (page !== currentPage) {\n            setCurrentPage(page);\n          }\n        }}\n      />\n\n      <ul>\n        {visibleArray.map((item) => (\n          <li\n            key={+item.slice(5)}\n            data-cy=\"item\"\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}